"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const plugins_1 = require("@nomiclabs/buidler/plugins");
const ethereumjs_abi_1 = __importDefault(require("ethereumjs-abi"));
class AbiEncoder {
    static encodeConstructor(contractAbi, constructorArguments) {
        const constructorAbi = contractAbi.find((value) => value.type === "constructor");
        if (constructorAbi === undefined) {
            return "";
        }
        if (constructorAbi.inputs.length !== constructorArguments.length) {
            throw new plugins_1.BuidlerPluginError(`Invalid number of constructor arguments:
          Expected: ${constructorAbi.inputs.length}
          Received: ${constructorArguments.length}`);
        }
        const types = constructorAbi.inputs.map((value) => value.type);
        return ethereumjs_abi_1.default.rawEncode(types, constructorArguments).toString("hex");
    }
}
exports.default = AbiEncoder;
//# sourceMappingURL=AbiEncoder.js.map