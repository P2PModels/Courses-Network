"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const plugins_1 = require("@nomiclabs/buidler/plugins");
function toRequest(params) {
    return Object.assign({ apikey: params.apiKey, module: "contract", action: "verifysourcecode", contractaddress: params.contractAddress, sourceCode: params.sourceCode, codeformat: "solidity-standard-json-input", contractname: params.contractName, compilerversion: params.compilerVersion, 
        // optimizationUsed: params.optimizationsUsed ? 1 : 0,
        // runs: params.runs,
        constructorArguements: params.constructorArguments }, parseLibraries(params.libraries));
}
exports.toRequest = toRequest;
function parseLibraries(libraries) {
    let parsedLibraries = {};
    try {
        if (libraries !== undefined && libraries !== "") {
            parsedLibraries = JSON.parse(libraries);
        }
    }
    catch (e) {
        throw new plugins_1.BuidlerPluginError(`Failed to parse libraries. Reason: ${e.message}`);
    }
    return Object.entries(parsedLibraries).reduce((acc, [libraryName, libraryAddress], index) => {
        acc[`libraryname${index + 1}`] = libraryName;
        acc[`libraryaddress${index + 1}`] = libraryAddress;
        return acc;
    }, {});
}
//# sourceMappingURL=EtherscanVerifyContractRequest.js.map