/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

/// <reference types="truffle-typings" />

import * as TruffleContracts from ".";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "AbstractENS"): TruffleContracts.AbstractENSContract;
      require(name: "AcceptOracle"): TruffleContracts.AcceptOracleContract;
      require(name: "ACL"): TruffleContracts.ACLContract;
      require(
        name: "APMNamehashMock"
      ): TruffleContracts.APMNamehashMockContract;
      require(name: "APMRegistry"): TruffleContracts.APMRegistryContract;
      require(
        name: "APMRegistryFactory"
      ): TruffleContracts.APMRegistryFactoryContract;
      require(
        name: "APMRegistryFactoryMock"
      ): TruffleContracts.APMRegistryFactoryMockContract;
      require(name: "AppProxyBase"): TruffleContracts.AppProxyBaseContract;
      require(
        name: "AppProxyFactory"
      ): TruffleContracts.AppProxyFactoryContract;
      require(name: "AppProxyPinned"): TruffleContracts.AppProxyPinnedContract;
      require(
        name: "AppProxyPinnedStorageMock"
      ): TruffleContracts.AppProxyPinnedStorageMockContract;
      require(
        name: "AppProxyUpgradeable"
      ): TruffleContracts.AppProxyUpgradeableContract;
      require(name: "AppStorage"): TruffleContracts.AppStorageContract;
      require(name: "AppStorageMock"): TruffleContracts.AppStorageMockContract;
      require(name: "AppStub"): TruffleContracts.AppStubContract;
      require(name: "AppStub2"): TruffleContracts.AppStub2Contract;
      require(
        name: "AppStubConditionalRecovery"
      ): TruffleContracts.AppStubConditionalRecoveryContract;
      require(
        name: "AppStubDepositable"
      ): TruffleContracts.AppStubDepositableContract;
      require(
        name: "AppStubScriptRunner"
      ): TruffleContracts.AppStubScriptRunnerContract;
      require(name: "AppStubStorage"): TruffleContracts.AppStubStorageContract;
      require(name: "AragonApp"): TruffleContracts.AragonAppContract;
      require(name: "Assert"): TruffleContracts.AssertContract;
      require(name: "Autopetrified"): TruffleContracts.AutopetrifiedContract;
      require(
        name: "BaseEVMScriptExecutor"
      ): TruffleContracts.BaseEVMScriptExecutorContract;
      require(name: "CallsScript"): TruffleContracts.CallsScriptContract;
      require(
        name: "ConditionalOracle"
      ): TruffleContracts.ConditionalOracleContract;
      require(name: "DAOFactory"): TruffleContracts.DAOFactoryContract;
      require(name: "DelegateProxy"): TruffleContracts.DelegateProxyContract;
      require(
        name: "DepositableDelegateProxy"
      ): TruffleContracts.DepositableDelegateProxyContract;
      require(
        name: "DepositableDelegateProxyMock"
      ): TruffleContracts.DepositableDelegateProxyMockContract;
      require(
        name: "DepositableStorage"
      ): TruffleContracts.DepositableStorageContract;
      require(
        name: "DepositableStorageMock"
      ): TruffleContracts.DepositableStorageMockContract;
      require(
        name: "EmptyDataReturnOracle"
      ): TruffleContracts.EmptyDataReturnOracleContract;
      require(name: "ENS"): TruffleContracts.ENSContract;
      require(
        name: "ENSConstantsMock"
      ): TruffleContracts.ENSConstantsMockContract;
      require(name: "ENSFactory"): TruffleContracts.ENSFactoryContract;
      require(
        name: "ENSSubdomainRegistrar"
      ): TruffleContracts.ENSSubdomainRegistrarContract;
      require(name: "ERC20"): TruffleContracts.ERC20Contract;
      require(name: "ERCProxy"): TruffleContracts.ERCProxyContract;
      require(name: "ERCProxyMock"): TruffleContracts.ERCProxyMockContract;
      require(
        name: "EtherTokenConstantMock"
      ): TruffleContracts.EtherTokenConstantMockContract;
      require(name: "EthSender"): TruffleContracts.EthSenderContract;
      require(
        name: "EVMScriptExecutorMock"
      ): TruffleContracts.EVMScriptExecutorMockContract;
      require(
        name: "EVMScriptExecutorNoReturnMock"
      ): TruffleContracts.EVMScriptExecutorNoReturnMockContract;
      require(
        name: "EVMScriptExecutorRevertMock"
      ): TruffleContracts.EVMScriptExecutorRevertMockContract;
      require(
        name: "EVMScriptRegistry"
      ): TruffleContracts.EVMScriptRegistryContract;
      require(
        name: "EVMScriptRegistryConstantsMock"
      ): TruffleContracts.EVMScriptRegistryConstantsMockContract;
      require(
        name: "EVMScriptRegistryFactory"
      ): TruffleContracts.EVMScriptRegistryFactoryContract;
      require(
        name: "EVMScriptRunner"
      ): TruffleContracts.EVMScriptRunnerContract;
      require(
        name: "ExecutionTarget"
      ): TruffleContracts.ExecutionTargetContract;
      require(
        name: "FakeAppConstants"
      ): TruffleContracts.FakeAppConstantsContract;
      require(name: "IACL"): TruffleContracts.IACLContract;
      require(name: "IACLOracle"): TruffleContracts.IACLOracleContract;
      require(
        name: "IEVMScriptExecutor"
      ): TruffleContracts.IEVMScriptExecutorContract;
      require(
        name: "IEVMScriptRegistry"
      ): TruffleContracts.IEVMScriptRegistryContract;
      require(name: "IForwarder"): TruffleContracts.IForwarderContract;
      require(name: "IForwarderFee"): TruffleContracts.IForwarderFeeContract;
      require(name: "IKernel"): TruffleContracts.IKernelContract;
      require(name: "IKernelEvents"): TruffleContracts.IKernelEventsContract;
      require(name: "Initializable"): TruffleContracts.InitializableContract;
      require(
        name: "InitializableStorageMock"
      ): TruffleContracts.InitializableStorageMockContract;
      require(
        name: "InvalidBytesLengthConversionThrows"
      ): TruffleContracts.InvalidBytesLengthConversionThrowsContract;
      require(
        name: "IVaultRecoverable"
      ): TruffleContracts.IVaultRecoverableContract;
      require(
        name: "KeccakConstants"
      ): TruffleContracts.KeccakConstantsContract;
      require(name: "Kernel"): TruffleContracts.KernelContract;
      require(
        name: "KernelConstantsMock"
      ): TruffleContracts.KernelConstantsMockContract;
      require(
        name: "KernelDepositableMock"
      ): TruffleContracts.KernelDepositableMockContract;
      require(
        name: "KernelOverloadMock"
      ): TruffleContracts.KernelOverloadMockContract;
      require(
        name: "KernelPinnedStorageMock"
      ): TruffleContracts.KernelPinnedStorageMockContract;
      require(name: "KernelProxy"): TruffleContracts.KernelProxyContract;
      require(
        name: "KernelSetAppMock"
      ): TruffleContracts.KernelSetAppMockContract;
      require(name: "KernelStorage"): TruffleContracts.KernelStorageContract;
      require(name: "LifecycleMock"): TruffleContracts.LifecycleMockContract;
      require(name: "Migrations"): TruffleContracts.MigrationsContract;
      require(name: "Petrifiable"): TruffleContracts.PetrifiableContract;
      require(
        name: "ProxyTargetWithFallback"
      ): TruffleContracts.ProxyTargetWithFallbackContract;
      require(
        name: "ProxyTargetWithoutFallback"
      ): TruffleContracts.ProxyTargetWithoutFallbackContract;
      require(name: "PublicResolver"): TruffleContracts.PublicResolverContract;
      require(
        name: "ReentrancyGuardMock"
      ): TruffleContracts.ReentrancyGuardMockContract;
      require(name: "ReentrantActor"): TruffleContracts.ReentrantActorContract;
      require(name: "RejectOracle"): TruffleContracts.RejectOracleContract;
      require(name: "Repo"): TruffleContracts.RepoContract;
      require(name: "RevertOracle"): TruffleContracts.RevertOracleContract;
      require(name: "SafeERC20Mock"): TruffleContracts.SafeERC20MockContract;
      require(name: "SafeMath64Mock"): TruffleContracts.SafeMath64MockContract;
      require(name: "SafeMath8Mock"): TruffleContracts.SafeMath8MockContract;
      require(
        name: "StateModifyingOracle"
      ): TruffleContracts.StateModifyingOracleContract;
      require(name: "Target"): TruffleContracts.TargetContract;
      require(
        name: "TestACLInterpreter"
      ): TruffleContracts.TestACLInterpreterContract;
      require(
        name: "TestConversionHelpers"
      ): TruffleContracts.TestConversionHelpersContract;
      require(
        name: "TestDelegateProxy"
      ): TruffleContracts.TestDelegateProxyContract;
      require(name: "ThrowProxy"): TruffleContracts.ThrowProxyContract;
      require(
        name: "TimeHelpersMock"
      ): TruffleContracts.TimeHelpersMockContract;
      require(name: "TokenMock"): TruffleContracts.TokenMockContract;
      require(
        name: "TokenReturnFalseMock"
      ): TruffleContracts.TokenReturnFalseMockContract;
      require(
        name: "TokenReturnMissingMock"
      ): TruffleContracts.TokenReturnMissingMockContract;
      require(name: "Uint256Mock"): TruffleContracts.Uint256MockContract;
      require(name: "UnsafeAppStub"): TruffleContracts.UnsafeAppStubContract;
      require(
        name: "UnsafeAppStubDepositable"
      ): TruffleContracts.UnsafeAppStubDepositableContract;
      require(
        name: "UnsafeAragonApp"
      ): TruffleContracts.UnsafeAragonAppContract;
      require(
        name: "UnsafeAragonAppMock"
      ): TruffleContracts.UnsafeAragonAppMockContract;
      require(name: "UnsafeRepo"): TruffleContracts.UnsafeRepoContract;
      require(name: "UpgradedKernel"): TruffleContracts.UpgradedKernelContract;
      require(name: "VaultMock"): TruffleContracts.VaultMockContract;
      require(
        name: "VaultRecoverable"
      ): TruffleContracts.VaultRecoverableContract;
    }
  }
}
