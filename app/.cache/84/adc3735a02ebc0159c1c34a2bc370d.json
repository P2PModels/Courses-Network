{"id":"../node_modules/rxjs/_esm5/internal/operators/timeout.js","dependencies":[{"name":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/operators/timeout.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/src/internal/operators/timeout.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/jonathanalmelaguerrero/miapp/app/package.json","includedInParent":true,"mtime":1607969559907},{"name":"/Users/jonathanalmelaguerrero/miapp/app/.babelrc","includedInParent":true,"mtime":1607969559906},{"name":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/package.json","includedInParent":true,"mtime":1607969929370},{"name":"../scheduler/async","loc":{"line":2,"column":22},"parent":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/operators/timeout.js","resolved":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/scheduler/async.js"},{"name":"../util/TimeoutError","loc":{"line":3,"column":29},"parent":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/operators/timeout.js","resolved":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/util/TimeoutError.js"},{"name":"./timeoutWith","loc":{"line":4,"column":28},"parent":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/operators/timeout.js","resolved":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/operators/timeoutWith.js"},{"name":"../observable/throwError","loc":{"line":5,"column":27},"parent":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/operators/timeout.js","resolved":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/observable/throwError.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.timeout = timeout;\n\nvar _async = require(\"../scheduler/async\");\n\nvar _TimeoutError = require(\"../util/TimeoutError\");\n\nvar _timeoutWith = require(\"./timeoutWith\");\n\nvar _throwError = require(\"../observable/throwError\");\n\n/** PURE_IMPORTS_START _scheduler_async,_util_TimeoutError,_timeoutWith,_observable_throwError PURE_IMPORTS_END */\nfunction timeout(due, scheduler) {\n  if (scheduler === void 0) {\n    scheduler = _async.async;\n  }\n\n  return (0, _timeoutWith.timeoutWith)(due, (0, _throwError.throwError)(new _TimeoutError.TimeoutError()), scheduler);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":89,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":90,"column":27},"generated":{"line":17,"column":0}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":90,"column":27},"generated":{"line":17,"column":9}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":90,"column":27},"generated":{"line":17,"column":16}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":90,"column":27},"generated":{"line":17,"column":17}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":90,"column":27},"generated":{"line":17,"column":20}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":90,"column":27},"generated":{"line":17,"column":22}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":90,"column":27},"generated":{"line":17,"column":31}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":90,"column":27},"generated":{"line":17,"column":33}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":91,"column":2},"generated":{"line":18,"column":0}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":91,"column":2},"generated":{"line":18,"column":6}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":18,"column":15}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":91,"column":20},"generated":{"line":18,"column":20}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":18,"column":25}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":91,"column":2},"generated":{"line":18,"column":26}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":91,"column":26},"generated":{"line":18,"column":28}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":92,"column":1},"generated":{"line":19,"column":0}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":92,"column":1},"generated":{"line":19,"column":4}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":92,"column":1},"generated":{"line":19,"column":13}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":92,"column":1},"generated":{"line":19,"column":16}},{"source":"../../../src/internal/operators/timeout.ts","name":null,"original":{"line":92,"column":1},"generated":{"line":19,"column":28}}],"sources":{"../../../src/internal/operators/timeout.ts":"import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * ## Examples\n * Check if ticks are emitted within certain timespan\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeout(1100))      // Let's use bigger timespan to be safe,\n *                                  // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err),     // Will never be called.\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err),     // Will emit error before even first value is emitted,\n *                                  // since it did not arrive within 900ms period.\n * );\n * ```\n *\n * Use Date to check if Observable completed\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(\n *   timeout(new Date(\"December 17, 2020 03:24:00\")),\n * )\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err)      // On December 17, 2020 at 03:24:00 it will emit an error,\n *                                  // since Observable did not complete by then.\n * );\n * ```\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n"},"lineCount":null}},"error":null,"hash":"bffc62b1e41e416e484bf6a4934ac55d","cacheData":{"env":{}}}