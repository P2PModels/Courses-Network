{"id":"../node_modules/rxjs/_esm5/internal/operators/max.js","dependencies":[{"name":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/operators/max.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/src/internal/operators/max.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/jonathanalmelaguerrero/miapp/app/package.json","includedInParent":true,"mtime":1607969559907},{"name":"/Users/jonathanalmelaguerrero/miapp/app/.babelrc","includedInParent":true,"mtime":1607969559906},{"name":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/package.json","includedInParent":true,"mtime":1607969929370},{"name":"./reduce","loc":{"line":2,"column":23},"parent":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/operators/max.js","resolved":"/Users/jonathanalmelaguerrero/miapp/app/node_modules/rxjs/_esm5/internal/operators/reduce.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.max = max;\n\nvar _reduce = require(\"./reduce\");\n\n/** PURE_IMPORTS_START _reduce PURE_IMPORTS_END */\nfunction max(comparer) {\n  var max = typeof comparer === 'function' ? function (x, y) {\n    return comparer(x, y) > 0 ? x : y;\n  } : function (x, y) {\n    return x > y ? x : y;\n  };\n  return (0, _reduce.reduce)(max);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":49,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":11,"column":0}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":50,"column":34},"generated":{"line":11,"column":9}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":11,"column":12}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":50,"column":34},"generated":{"line":11,"column":13}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":50,"column":2},"generated":{"line":11,"column":21}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":50,"column":49},"generated":{"line":11,"column":23}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":51,"column":4},"generated":{"line":12,"column":6}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":12,"column":9}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":12,"column":12}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":51,"column":8},"generated":{"line":12,"column":19}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":12,"column":27}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":51,"column":16},"generated":{"line":12,"column":32}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":12,"column":42}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":6},"generated":{"line":12,"column":45}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":7},"generated":{"line":12,"column":55}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":6},"generated":{"line":12,"column":56}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":10},"generated":{"line":12,"column":58}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":6},"generated":{"line":12,"column":59}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":11},"generated":{"line":12,"column":61}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":0}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":11}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":13,"column":19}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":25},"generated":{"line":13,"column":20}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":13,"column":21}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":28},"generated":{"line":13,"column":23}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":24},"generated":{"line":13,"column":24}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":25}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":13,"column":28}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":29}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":13,"column":32}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":33}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":13,"column":36}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":16},"generated":{"line":13,"column":37}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":52,"column":30},"generated":{"line":14,"column":0}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":14,"column":3}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":2},"generated":{"line":14,"column":6}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":14,"column":16}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":2},"generated":{"line":14,"column":17}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":14,"column":19}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":2},"generated":{"line":14,"column":20}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":14,"column":22}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":15,"column":0}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":15,"column":11}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":15,"column":12}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":15,"column":15}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":15,"column":16}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":15,"column":19}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":15,"column":20}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":15,"column":23}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":15,"column":24}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":16,"column":0}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":55,"column":1},"generated":{"line":17,"column":0}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":55,"column":1},"generated":{"line":17,"column":9}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":55,"column":1},"generated":{"line":17,"column":29}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":55,"column":1},"generated":{"line":17,"column":32}},{"source":"../../../src/internal/operators/max.ts","name":null,"original":{"line":55,"column":1},"generated":{"line":17,"column":33}}],"sources":{"../../../src/internal/operators/max.ts":"import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n * Get the maximal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   max(),\n * )\n * .subscribe(x => console.log(x)); // -> 8\n * ```\n *\n * Use a comparer function to get the maximal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n"},"lineCount":null}},"error":null,"hash":"1cab46a30f34f6a9bba39311f1c14cc9","cacheData":{"env":{}}}