"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AragonApi = AragonApi;
exports.useGuiStyle = useGuiStyle;
exports.useMenuButton = exports.usePath = exports.useNetwork = exports.useInstalledApps = exports.useCurrentApp = exports.useConnectedAccount = exports.useAragonApi = exports.useAppState = exports.useApi = exports._AragonApiContext = void 0;

var _react = require("react");

var _api = _interopRequireWildcard(require("@aragon/api"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

var warn = function warn() {
  // Warn in dev mode only
  if (process.env.NODE_ENV === 'development') {
    var _console;

    (_console = console).warn.apply(_console, arguments);
  }
};

var postMessage = function postMessage(name, value) {
  window.parent.postMessage({
    from: 'app',
    name: name,
    value: value
  }, '*');
};

var requestMenu = function requestMenu() {
  warn('api-react: "requestMenu" is deprecated and is a noop. It can safely be removed from your codebase.');
};

var AragonApiContext = (0, _react.createContext)();
exports._AragonApiContext = AragonApiContext;

function AragonApi(_ref) {
  var children = _ref.children,
      _ref$reducer = _ref.reducer,
      reducer = _ref$reducer === void 0 ? function (state) {
    return state === null ? {} : state;
  } : _ref$reducer,
      _ref$onMessage = _ref.onMessage,
      onMessage = _ref$onMessage === void 0 ? function () {} : _ref$onMessage;

  var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      api = _useState2[0],
      setApi = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      appState = _useState4[0],
      setAppState = _useState4[1];

  var _useState5 = (0, _react.useState)(''),
      _useState6 = _slicedToArray(_useState5, 2),
      connectedAccount = _useState6[0],
      setConnectedAccount = _useState6[1];

  var _useState7 = (0, _react.useState)(null),
      _useState8 = _slicedToArray(_useState7, 2),
      currentApp = _useState8[0],
      setCurrentApp = _useState8[1];

  var _useState9 = (0, _react.useState)([]),
      _useState10 = _slicedToArray(_useState9, 2),
      installedApps = _useState10[0],
      setInstalledApps = _useState10[1];

  var _useState11 = (0, _react.useState)({
    appearance: 'light',
    theme: null
  }),
      _useState12 = _slicedToArray(_useState11, 2),
      guiStyle = _useState12[0],
      setGuiStyle = _useState12[1];

  var _useState13 = (0, _react.useState)(null),
      _useState14 = _slicedToArray(_useState13, 2),
      network = _useState14[0],
      setNetwork = _useState14[1];

  var _useState15 = (0, _react.useState)('/'),
      _useState16 = _slicedToArray(_useState15, 2),
      path = _useState16[0],
      setPath = _useState16[1];

  var _useState17 = (0, _react.useState)(null),
      _useState18 = _slicedToArray(_useState17, 2),
      requestPath = _useState18[0],
      setRequestPath = _useState18[1];

  (0, _react.useEffect)(function () {
    var api = new _api["default"](new _api.providers.WindowMessage(window.parent));
    setApi(api);
    setRequestPath(function () {
      return function (path) {
        return api.requestPath(path).toPromise();
      };
    });
  }, []);
  (0, _react.useEffect)(function () {
    if (AragonApi._mounted) {
      throw new Error('AragonApi has been declared more than once. Please ensure ' + 'that you only have one instance in your application.');
    }

    AragonApi._mounted = true;
    return function () {
      AragonApi._mounted = false;
    };
  }, []);
  (0, _react.useEffect)(function () {
    if (!api) return;
    var cancelled = false;
    var subscribers = [];

    var handleMessage = function handleMessage() {
      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          data = _ref2.data;

      if (!data || data.from !== 'wrapper') {
        return;
      }

      if (data.name === 'ready') {
        subscribers = [// app state
        api.state().subscribe(function (state) {
          return setAppState(reducer(state));
        }), // account
        api.accounts().subscribe(function (accounts) {
          return setConnectedAccount(accounts[0] || '');
        }), // network
        api.network().subscribe(function (network) {
          return setNetwork(network || null);
        }), // installed apps
        api.installedApps().subscribe(function (apps) {
          return setInstalledApps(apps || []);
        }), // path
        api.path().subscribe(function (path) {
          return setPath(path || '/');
        }), // GUI style
        api.guiStyle().subscribe(setGuiStyle)];
        api.currentApp().toPromise().then(function (currentApp) {
          if (!cancelled) {
            setCurrentApp(currentApp || null);
          }
        });
        postMessage('ready', true);
      }

      onMessage(data.name, data.value);
    };

    window.addEventListener('message', handleMessage);
    return function () {
      window.removeEventListener('message', handleMessage);
      cancelled = true;
      subscribers.forEach(function (subscriber) {
        return subscriber.unsubscribe();
      });
    };
  }, [api, reducer]); // We are only using createElement() once so letâ€™s use it directly rather
  // than the JSX syntax, so we avoid adding a babel transform for it.

  return (0, _react.createElement)(AragonApiContext.Provider, {
    value: {
      api: api,
      connectedAccount: connectedAccount,
      currentApp: currentApp,
      guiStyle: guiStyle,
      installedApps: installedApps,
      network: network,
      path: path,
      requestPath: requestPath,
      // reducer(null) is called to get the initial state
      appState: appState === null ? reducer(null) : appState,
      // Deprecated
      displayMenuButton: false
    }
  }, children);
}

function getAragonApiData(hookName) {
  var aragonApiData = (0, _react.useContext)(AragonApiContext);

  if (aragonApiData === undefined) {
    throw new Error("You used ".concat(hookName, " in a component that is not a descendant of ") + '<AragonApi />. Please declare this component (in the top ' + 'level component of your app for example).');
  }

  return aragonApiData;
}

var useAragonApi = function useAragonApi() {
  return _objectSpread({}, getAragonApiData('useAragonApi()'), {
    _sendMessage: postMessage,
    // Deprecated
    requestMenu: requestMenu
  });
}; // direct access hooks


exports.useAragonApi = useAragonApi;

var useApi = function useApi() {
  return getAragonApiData('useApi()').api;
};

exports.useApi = useApi;

var useAppState = function useAppState() {
  return getAragonApiData('useAppState()').appState;
};

exports.useAppState = useAppState;

var useConnectedAccount = function useConnectedAccount() {
  return getAragonApiData('useConnectedAccount()').connectedAccount;
};

exports.useConnectedAccount = useConnectedAccount;

var useCurrentApp = function useCurrentApp() {
  return getAragonApiData('useCurrentApp()').currentApp;
};

exports.useCurrentApp = useCurrentApp;

var useInstalledApps = function useInstalledApps() {
  return getAragonApiData('useInstalledApps()').installedApps;
};

exports.useInstalledApps = useInstalledApps;

var useNetwork = function useNetwork() {
  return getAragonApiData('useNetwork()').network;
};

exports.useNetwork = useNetwork;

var usePath = function usePath() {
  var _getAragonApiData = getAragonApiData('usePath()'),
      path = _getAragonApiData.path,
      requestPath = _getAragonApiData.requestPath;

  return [path, requestPath];
};

exports.usePath = usePath;

function useGuiStyle() {
  return getAragonApiData('useGuiStyle()').guiStyle;
} // Deprecated


var useMenuButton = function useMenuButton() {
  warn('api-react: "useMenuButton" is deprecated. It can safely be removed from your codebase.');
  return [getAragonApiData('useMenuButton()').displayMenuButton, requestMenu];
};

exports.useMenuButton = useMenuButton;
//# sourceMappingURL=index.js.map